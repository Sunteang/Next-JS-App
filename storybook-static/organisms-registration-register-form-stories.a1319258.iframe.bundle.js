(self.webpackChunknext_app=self.webpackChunknext_app||[]).push([[389],{"./app/components/organisms/registration/register-form.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,ErrorInvalidEmail:()=>ErrorInvalidEmail,ErrorPasswordMismatch:()=>ErrorPasswordMismatch,ErrorShortPassword:()=>ErrorShortPassword,SuccessRegistration:()=>SuccessRegistration,__namedExportsOrder:()=>__namedExportsOrder,default:()=>register_form_stories});var dist=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),jest_dist=__webpack_require__("./node_modules/@storybook/jest/dist/index.mjs"),jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");function cov_1g3c59a8hp(){var path="/Users/sunteang/Downloads/sunteangserey/SabaiCode/SabaiPractice/next-app/app/components/organisms/registration/register-form.tsx",global=new Function("return this")(),gcv="__coverage__",coverageData={path:"/Users/sunteang/Downloads/sunteangserey/SabaiCode/SabaiPractice/next-app/app/components/organisms/registration/register-form.tsx",statementMap:{0:{start:{line:160,column:25},end:{line:294,column:1}},1:{start:{line:161,column:30},end:{line:161,column:42}},2:{start:{line:162,column:36},end:{line:162,column:48}},3:{start:{line:163,column:50},end:{line:163,column:62}},4:{start:{line:164,column:32},end:{line:164,column:44}},5:{start:{line:165,column:34},end:{line:165,column:49}},6:{start:{line:166,column:34},end:{line:166,column:49}},7:{start:{line:167,column:21},end:{line:176,column:5}},8:{start:{line:168,column:26},end:{line:168,column:28}},9:{start:{line:169,column:29},end:{line:169,column:57}},10:{start:{line:170,column:8},end:{line:171,column:86}},11:{start:{line:170,column:20},end:{line:170,column:59}},12:{start:{line:171,column:13},end:{line:171,column:86}},13:{start:{line:171,column:44},end:{line:171,column:86}},14:{start:{line:172,column:8},end:{line:173,column:101}},15:{start:{line:172,column:23},end:{line:172,column:68}},16:{start:{line:173,column:13},end:{line:173,column:101}},17:{start:{line:173,column:38},end:{line:173,column:101}},18:{start:{line:174,column:8},end:{line:174,column:96}},19:{start:{line:174,column:42},end:{line:174,column:96}},20:{start:{line:175,column:8},end:{line:175,column:25}},21:{start:{line:177,column:25},end:{line:203,column:5}},22:{start:{line:178,column:8},end:{line:178,column:27}},23:{start:{line:179,column:8},end:{line:179,column:25}},24:{start:{line:180,column:8},end:{line:180,column:22}},25:{start:{line:181,column:8},end:{line:181,column:26}},26:{start:{line:182,column:33},end:{line:182,column:43}},27:{start:{line:183,column:8},end:{line:187,column:9}},28:{start:{line:184,column:12},end:{line:184,column:40}},29:{start:{line:185,column:12},end:{line:185,column:30}},30:{start:{line:186,column:12},end:{line:186,column:19}},31:{start:{line:188,column:8},end:{line:202,column:9}},32:{start:{line:190,column:12},end:{line:197,column:15}},33:{start:{line:191,column:16},end:{line:196,column:25}},34:{start:{line:193,column:20},end:{line:193,column:46}},35:{start:{line:194,column:20},end:{line:194,column:37}},36:{start:{line:195,column:20},end:{line:195,column:34}},37:{start:{line:201,column:12},end:{line:201,column:30}},38:{start:{line:204,column:4},end:{line:293,column:7}},39:{start:{line:239,column:43},end:{line:239,column:67}},40:{start:{line:257,column:43},end:{line:257,column:70}},41:{start:{line:275,column:43},end:{line:275,column:77}},42:{start:{line:296,column:0},end:{line:330,column:2}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:160,column:25},end:{line:160,column:26}},loc:{start:{line:160,column:41},end:{line:294,column:1}},line:160},1:{name:"(anonymous_1)",decl:{start:{line:167,column:21},end:{line:167,column:22}},loc:{start:{line:167,column:25},end:{line:176,column:5}},line:167},2:{name:"(anonymous_2)",decl:{start:{line:177,column:25},end:{line:177,column:26}},loc:{start:{line:177,column:36},end:{line:203,column:5}},line:177},3:{name:"(anonymous_3)",decl:{start:{line:190,column:30},end:{line:190,column:31}},loc:{start:{line:190,column:41},end:{line:197,column:13}},line:190},4:{name:"(anonymous_4)",decl:{start:{line:191,column:27},end:{line:191,column:28}},loc:{start:{line:191,column:31},end:{line:196,column:17}},line:191},5:{name:"(anonymous_5)",decl:{start:{line:239,column:38},end:{line:239,column:39}},loc:{start:{line:239,column:43},end:{line:239,column:67}},line:239},6:{name:"(anonymous_6)",decl:{start:{line:257,column:38},end:{line:257,column:39}},loc:{start:{line:257,column:43},end:{line:257,column:70}},line:257},7:{name:"(anonymous_7)",decl:{start:{line:275,column:38},end:{line:275,column:39}},loc:{start:{line:275,column:43},end:{line:275,column:77}},line:275}},branchMap:{0:{loc:{start:{line:170,column:8},end:{line:171,column:86}},type:"if",locations:[{start:{line:170,column:8},end:{line:171,column:86}},{start:{line:171,column:13},end:{line:171,column:86}}],line:170},1:{loc:{start:{line:171,column:13},end:{line:171,column:86}},type:"if",locations:[{start:{line:171,column:13},end:{line:171,column:86}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:171},2:{loc:{start:{line:172,column:8},end:{line:173,column:101}},type:"if",locations:[{start:{line:172,column:8},end:{line:173,column:101}},{start:{line:173,column:13},end:{line:173,column:101}}],line:172},3:{loc:{start:{line:173,column:13},end:{line:173,column:101}},type:"if",locations:[{start:{line:173,column:13},end:{line:173,column:101}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:173},4:{loc:{start:{line:174,column:8},end:{line:174,column:96}},type:"if",locations:[{start:{line:174,column:8},end:{line:174,column:96}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:174},5:{loc:{start:{line:183,column:8},end:{line:187,column:9}},type:"if",locations:[{start:{line:183,column:8},end:{line:187,column:9}},{start:{line:void 0,column:void 0},end:{line:void 0,column:void 0}}],line:183},6:{loc:{start:{line:215,column:16},end:{line:218,column:18}},type:"binary-expr",locations:[{start:{line:215,column:16},end:{line:215,column:28}},{start:{line:215,column:46},end:{line:218,column:18}}],line:215},7:{loc:{start:{line:219,column:16},end:{line:222,column:18}},type:"binary-expr",locations:[{start:{line:219,column:16},end:{line:219,column:31}},{start:{line:219,column:49},end:{line:222,column:18}}],line:219},8:{loc:{start:{line:223,column:16},end:{line:226,column:18}},type:"binary-expr",locations:[{start:{line:223,column:16},end:{line:223,column:38}},{start:{line:223,column:56},end:{line:226,column:18}}],line:223},9:{loc:{start:{line:240,column:87},end:{line:240,column:220}},type:"cond-expr",locations:[{start:{line:240,column:102},end:{line:240,column:158}},{start:{line:240,column:161},end:{line:240,column:220}}],line:240},10:{loc:{start:{line:258,column:87},end:{line:258,column:223}},type:"cond-expr",locations:[{start:{line:258,column:105},end:{line:258,column:161}},{start:{line:258,column:164},end:{line:258,column:223}}],line:258},11:{loc:{start:{line:276,column:87},end:{line:276,column:230}},type:"cond-expr",locations:[{start:{line:276,column:112},end:{line:276,column:168}},{start:{line:276,column:171},end:{line:276,column:230}}],line:276},12:{loc:{start:{line:283,column:86},end:{line:283,column:162}},type:"cond-expr",locations:[{start:{line:283,column:96},end:{line:283,column:128}},{start:{line:283,column:131},end:{line:283,column:162}}],line:283},13:{loc:{start:{line:285,column:30},end:{line:285,column:69}},type:"cond-expr",locations:[{start:{line:285,column:40},end:{line:285,column:56}},{start:{line:285,column:59},end:{line:285,column:69}}],line:285},14:{loc:{start:{line:287,column:16},end:{line:290,column:18}},type:"binary-expr",locations:[{start:{line:287,column:16},end:{line:287,column:23}},{start:{line:287,column:41},end:{line:290,column:18}}],line:287}},s:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0},f:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0},b:{0:[0,0],1:[0,0],2:[0,0],3:[0,0],4:[0,0],5:[0,0],6:[0,0],7:[0,0],8:[0,0],9:[0,0],10:[0,0],11:[0,0],12:[0,0],13:[0,0],14:[0,0]},inputSourceMap:{version:3,sources:["/Users/sunteang/Downloads/sunteangserey/SabaiCode/SabaiPractice/next-app/app/components/organisms/registration/register-form.tsx"],sourcesContent:['// import React, { useState } from "react";\n\n// interface RegistrationFormProps {\n//   onSubmit: (email: string, password: string) => void;\n// }\n\n// const RegistrationForm: React.FC<RegistrationFormProps> = ({ onSubmit }) => {\n//   const [email, setEmail] = useState("");\n//   const [password, setPassword] = useState("");\n//   const [confirmPassword, setConfirmPassword] = useState("");\n//   const [errors, setErrors] = useState<{\n//     email?: string;\n//     password?: string;\n//     confirmPassword?: string;\n//   }>({});\n//   const [loading, setLoading] = useState(false);\n//   const [success, setSuccess] = useState(false);\n\n//   const validate = () => {\n//     const newErrors: {\n//       email?: string;\n//       password?: string;\n//       confirmPassword?: string;\n//     } = {};\n//     const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n//     if (!email) newErrors.email = "Email is required.";\n//     else if (!emailPattern.test(email))\n//       newErrors.email = "Invalid email format.";\n\n//     if (!password) newErrors.password = "Password is required.";\n//     else if (password.length < 8)\n//       newErrors.password = "Password must be at least 8 characters.";\n\n//     if (confirmPassword !== password)\n//       newErrors.confirmPassword = "Passwords do not match.";\n\n//     return newErrors;\n//   };\n\n//   const handleSubmit = async (e: React.FormEvent) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setErrors({});\n//     setSuccess(false);\n\n//     const validationErrors = validate();\n//     if (Object.keys(validationErrors).length > 0) {\n//       setErrors(validationErrors);\n//       setLoading(false);\n//       return;\n//     }\n\n//     try {\n//       // Simulate API request\n//       await new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//           // Simulate successful registration\n//           onSubmit(email, password);\n//           setSuccess(true);\n//           resolve(true);\n//         }, 1000);\n//       });\n//     } catch (error) {\n//       // Handle error (if any)\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className="flex items-center justify-center min-h-screen bg-gray-100">\n//       <form\n//         noValidate\n//         onSubmit={handleSubmit}\n//         className="bg-white p-6 rounded-lg shadow-md w-full max-w-sm"\n//       >\n//         <h2 className="text-2xl font-semibold mb-4 text-center">Register</h2>\n//         {errors.email && (\n//           <div className="text-red-500 mb-2">{errors.email}</div>\n//         )}\n//         {errors.password && (\n//           <div className="text-red-500 mb-2">{errors.password}</div>\n//         )}\n//         {errors.confirmPassword && (\n//           <div className="text-red-500 mb-4">{errors.confirmPassword}</div>\n//         )}\n//         <div className="mb-4">\n//           <label\n//             htmlFor="email"\n//             className="block text-sm font-medium text-gray-700 mb-1"\n//           >\n//             Email:\n//           </label>\n//           <input\n//             id="email"\n//             type="email"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             className={`w-full px-3 py-2 border rounded-md shadow-sm ${\n//               errors.email\n//                 ? "border-red-500 focus:ring-red-500 focus:border-red-500"\n//                 : "border-gray-300 focus:ring-blue-500 focus:border-blue-500"\n//             }`}\n//             required\n//           />\n//         </div>\n//         <div className="mb-4">\n//           <label\n//             htmlFor="password"\n//             className="block text-sm font-medium text-gray-700 mb-1"\n//           >\n//             Password:\n//           </label>\n//           <input\n//             id="password"\n//             type="password"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             className={`w-full px-3 py-2 border rounded-md shadow-sm ${\n//               errors.password\n//                 ? "border-red-500 focus:ring-red-500 focus:border-red-500"\n//                 : "border-gray-300 focus:ring-blue-500 focus:border-blue-500"\n//             }`}\n//             required\n//           />\n//         </div>\n//         <div className="mb-4">\n//           <label\n//             htmlFor="confirmPassword"\n//             className="block text-sm font-medium text-gray-700 mb-1"\n//           >\n//             Confirm Password:\n//           </label>\n//           <input\n//             id="confirmPassword"\n//             type="password"\n//             value={confirmPassword}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//             className={`w-full px-3 py-2 border rounded-md shadow-sm ${\n//               errors.confirmPassword\n//                 ? "border-red-500 focus:ring-red-500 focus:border-red-500"\n//                 : "border-gray-300 focus:ring-blue-500 focus:border-blue-500"\n//             }`}\n//             required\n//           />\n//         </div>\n//         <button\n//           type="submit"\n//           className={`w-full py-2 px-4 font-semibold rounded-md shadow-sm ${\n//             loading\n//               ? "bg-gray-500 cursor-not-allowed"\n//               : "bg-blue-500 hover:bg-blue-600"\n//           } text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50`}\n//           disabled={loading}\n//         >\n//           {loading ? "Registering..." : "Register"}\n//         </button>\n//         {success && (\n//           <div className="text-green-500 mt-4 text-center">\n//             Registration successful!\n//           </div>\n//         )}\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default RegistrationForm;\n\nimport React, { useState } from "react";\n\ninterface RegistrationFormProps {\n  onSubmit: (email: string, password: string) => void;\n}\n\nconst RegistrationForm: React.FC<RegistrationFormProps> = ({ onSubmit }) => {\n  const [email, setEmail] = useState("");\n  const [password, setPassword] = useState("");\n  const [confirmPassword, setConfirmPassword] = useState("");\n  const [errors, setErrors] = useState<{\n    email?: string;\n    password?: string;\n    confirmPassword?: string;\n  }>({});\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const validate = () => {\n    const newErrors: {\n      email?: string;\n      password?: string;\n      confirmPassword?: string;\n    } = {};\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (!email) newErrors.email = "Email is required.";\n    else if (!emailPattern.test(email))\n      newErrors.email = "Invalid email format.";\n\n    if (!password) newErrors.password = "Password is required.";\n    else if (password.length < 8)\n      newErrors.password = "Password must be at least 8 characters.";\n\n    if (confirmPassword !== password)\n      newErrors.confirmPassword = "Passwords do not match.";\n\n    return newErrors;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setErrors({});\n    setSuccess(false);\n\n    const validationErrors = validate();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Simulate API request\n      await new Promise((resolve) => {\n        setTimeout(() => {\n          // Simulate successful registration\n          onSubmit(email, password);\n          setSuccess(true);\n          resolve(true);\n        }, 1000);\n      });\n    } catch (error) {\n      // Handle error (if any)\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className="flex items-center justify-center min-h-screen bg-gray-100">\n      <form\n        noValidate\n        onSubmit={handleSubmit}\n        className="bg-white p-6 rounded-lg shadow-md w-full max-w-sm"\n      >\n        <h2 className="text-2xl font-semibold mb-4 text-center">Register</h2>\n        {errors.email && (\n          <div className="text-red-500 mb-2">{errors.email}</div>\n        )}\n        {errors.password && (\n          <div className="text-red-500 mb-2">{errors.password}</div>\n        )}\n        {errors.confirmPassword && (\n          <div className="text-red-500 mb-4">{errors.confirmPassword}</div>\n        )}\n        <div className="mb-4">\n          <label\n            htmlFor="email"\n            className="block text-sm font-medium text-gray-700 mb-1"\n          >\n            Email:\n          </label>\n          <input\n            id="email"\n            type="email"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className={`w-full px-3 py-2 border rounded-md shadow-sm ${\n              errors.email\n                ? "border-red-500 focus:ring-red-500 focus:border-red-500"\n                : "border-gray-300 focus:ring-blue-500 focus:border-blue-500"\n            }`}\n            required\n          />\n        </div>\n        <div className="mb-4">\n          <label\n            htmlFor="password"\n            className="block text-sm font-medium text-gray-700 mb-1"\n          >\n            Password:\n          </label>\n          <input\n            id="password"\n            type="password"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className={`w-full px-3 py-2 border rounded-md shadow-sm ${\n              errors.password\n                ? "border-red-500 focus:ring-red-500 focus:border-red-500"\n                : "border-gray-300 focus:ring-blue-500 focus:border-blue-500"\n            }`}\n            required\n          />\n        </div>\n        <div className="mb-4">\n          <label\n            htmlFor="confirmPassword"\n            className="block text-sm font-medium text-gray-700 mb-1"\n          >\n            Confirm Password:\n          </label>\n          <input\n            id="confirmPassword"\n            type="password"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            className={`w-full px-3 py-2 border rounded-md shadow-sm ${\n              errors.confirmPassword\n                ? "border-red-500 focus:ring-red-500 focus:border-red-500"\n                : "border-gray-300 focus:ring-blue-500 focus:border-blue-500"\n            }`}\n            required\n          />\n        </div>\n        <button\n          type="submit"\n          className={`w-full py-2 px-4 font-semibold rounded-md shadow-sm ${\n            loading\n              ? "bg-gray-500 cursor-not-allowed"\n              : "bg-blue-500 hover:bg-blue-600"\n          } text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50`}\n          disabled={loading}\n        >\n          {loading ? "Registering..." : "Register"}\n        </button>\n        {success && (\n          <div className="text-green-500 mt-4 text-center">\n            Registration successful!\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n'],names:["React","useState","RegistrationForm","onSubmit","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","loading","setLoading","success","setSuccess","validate","newErrors","emailPattern","test","length","handleSubmit","e","preventDefault","validationErrors","Object","keys","Promise","resolve","setTimeout","error","div","className","form","noValidate","h2","label","htmlFor","input","id","type","value","onChange","target","required","button","disabled"],mappings:"AAAA,2CAA2C;AAE3C,oCAAoC;AACpC,yDAAyD;AACzD,IAAI;AAEJ,gFAAgF;AAChF,4CAA4C;AAC5C,kDAAkD;AAClD,gEAAgE;AAChE,2CAA2C;AAC3C,sBAAsB;AACtB,yBAAyB;AACzB,gCAAgC;AAChC,YAAY;AACZ,mDAAmD;AACnD,mDAAmD;AAEnD,6BAA6B;AAC7B,yBAAyB;AACzB,wBAAwB;AACxB,2BAA2B;AAC3B,kCAAkC;AAClC,cAAc;AACd,yDAAyD;AAEzD,0DAA0D;AAC1D,0CAA0C;AAC1C,mDAAmD;AAEnD,mEAAmE;AACnE,oCAAoC;AACpC,wEAAwE;AAExE,wCAAwC;AACxC,+DAA+D;AAE/D,wBAAwB;AACxB,OAAO;AAEP,yDAAyD;AACzD,0BAA0B;AAC1B,wBAAwB;AACxB,qBAAqB;AACrB,yBAAyB;AAEzB,2CAA2C;AAC3C,sDAAsD;AACtD,qCAAqC;AACrC,2BAA2B;AAC3B,gBAAgB;AAChB,QAAQ;AAER,YAAY;AACZ,gCAAgC;AAChC,iDAAiD;AACjD,6BAA6B;AAC7B,gDAAgD;AAChD,uCAAuC;AACvC,8BAA8B;AAC9B,2BAA2B;AAC3B,oBAAoB;AACpB,YAAY;AACZ,wBAAwB;AACxB,iCAAiC;AACjC,kBAAkB;AAClB,2BAA2B;AAC3B,QAAQ;AACR,OAAO;AAEP,aAAa;AACb,kFAAkF;AAClF,cAAc;AACd,qBAAqB;AACrB,kCAAkC;AAClC,wEAAwE;AACxE,UAAU;AACV,gFAAgF;AAChF,6BAA6B;AAC7B,oEAAoE;AACpE,aAAa;AACb,gCAAgC;AAChC,uEAAuE;AACvE,aAAa;AACb,uCAAuC;AACvC,8EAA8E;AAC9E,aAAa;AACb,iCAAiC;AACjC,mBAAmB;AACnB,8BAA8B;AAC9B,uEAAuE;AACvE,cAAc;AACd,qBAAqB;AACrB,qBAAqB;AACrB,mBAAmB;AACnB,yBAAyB;AACzB,2BAA2B;AAC3B,4BAA4B;AAC5B,yDAAyD;AACzD,0EAA0E;AAC1E,6BAA6B;AAC7B,6EAA6E;AAC7E,gFAAgF;AAChF,kBAAkB;AAClB,uBAAuB;AACvB,eAAe;AACf,iBAAiB;AACjB,iCAAiC;AACjC,mBAAmB;AACnB,iCAAiC;AACjC,uEAAuE;AACvE,cAAc;AACd,wBAAwB;AACxB,qBAAqB;AACrB,mBAAmB;AACnB,4BAA4B;AAC5B,8BAA8B;AAC9B,+BAA+B;AAC/B,4DAA4D;AAC5D,0EAA0E;AAC1E,gCAAgC;AAChC,6EAA6E;AAC7E,gFAAgF;AAChF,kBAAkB;AAClB,uBAAuB;AACvB,eAAe;AACf,iBAAiB;AACjB,iCAAiC;AACjC,mBAAmB;AACnB,wCAAwC;AACxC,uEAAuE;AACvE,cAAc;AACd,gCAAgC;AAChC,qBAAqB;AACrB,mBAAmB;AACnB,mCAAmC;AACnC,8BAA8B;AAC9B,sCAAsC;AACtC,mEAAmE;AACnE,0EAA0E;AAC1E,uCAAuC;AACvC,6EAA6E;AAC7E,gFAAgF;AAChF,kBAAkB;AAClB,uBAAuB;AACvB,eAAe;AACf,iBAAiB;AACjB,kBAAkB;AAClB,0BAA0B;AAC1B,+EAA+E;AAC/E,sBAAsB;AACtB,mDAAmD;AACnD,kDAAkD;AAClD,qGAAqG;AACrG,+BAA+B;AAC/B,YAAY;AACZ,sDAAsD;AACtD,oBAAoB;AACpB,wBAAwB;AACxB,8DAA8D;AAC9D,uCAAuC;AACvC,mBAAmB;AACnB,aAAa;AACb,gBAAgB;AAChB,aAAa;AACb,OAAO;AACP,KAAK;AAEL,mCAAmC;;AAEnC,OAAOA,SAASC,QAAQ,QAAQ,QAAQ;AAMxC,MAAMC,mBAAoD,CAAC,EAAEC,QAAQ,EAAE;IACrE,MAAM,CAACC,OAAOC,SAAS,GAAGJ,SAAS;IACnC,MAAM,CAACK,UAAUC,YAAY,GAAGN,SAAS;IACzC,MAAM,CAACO,iBAAiBC,mBAAmB,GAAGR,SAAS;IACvD,MAAM,CAACS,QAAQC,UAAU,GAAGV,SAIzB,CAAC;IACJ,MAAM,CAACW,SAASC,WAAW,GAAGZ,SAAS;IACvC,MAAM,CAACa,SAASC,WAAW,GAAGd,SAAS;IAEvC,MAAMe,WAAW;QACf,MAAMC,YAIF,CAAC;QACL,MAAMC,eAAe;QAErB,IAAI,CAACd,OAAOa,UAAUb,KAAK,GAAG;aACzB,IAAI,CAACc,aAAaC,IAAI,CAACf,QAC1Ba,UAAUb,KAAK,GAAG;QAEpB,IAAI,CAACE,UAAUW,UAAUX,QAAQ,GAAG;aAC/B,IAAIA,SAASc,MAAM,GAAG,GACzBH,UAAUX,QAAQ,GAAG;QAEvB,IAAIE,oBAAoBF,UACtBW,UAAUT,eAAe,GAAG;QAE9B,OAAOS;IACT;IAEA,MAAMI,eAAe,OAAOC;QAC1BA,EAAEC,cAAc;QAChBV,WAAW;QACXF,UAAU,CAAC;QACXI,WAAW;QAEX,MAAMS,mBAAmBR;QACzB,IAAIS,OAAOC,IAAI,CAACF,kBAAkBJ,MAAM,GAAG,GAAG;YAC5CT,UAAUa;YACVX,WAAW;YACX;QACF;QAEA,IAAI;YACF,uBAAuB;YACvB,MAAM,IAAIc,QAAQ,CAACC;gBACjBC,WAAW;oBACT,mCAAmC;oBACnC1B,SAASC,OAAOE;oBAChBS,WAAW;oBACXa,QAAQ;gBACV,GAAG;YACL;QACF,EAAE,OAAOE,OAAO;QACd,wBAAwB;QAC1B,SAAU;YACRjB,WAAW;QACb;IACF;IAEA,qBACE,KAACkB;QAAIC,WAAU;kBACb,cAAA,MAACC;YACCC,UAAU;YACV/B,UAAUkB;YACVW,WAAU;;8BAEV,KAACG;oBAAGH,WAAU;8BAA0C;;gBACvDtB,OAAON,KAAK,kBACX,KAAC2B;oBAAIC,WAAU;8BAAqBtB,OAAON,KAAK;;gBAEjDM,OAAOJ,QAAQ,kBACd,KAACyB;oBAAIC,WAAU;8BAAqBtB,OAAOJ,QAAQ;;gBAEpDI,OAAOF,eAAe,kBACrB,KAACuB;oBAAIC,WAAU;8BAAqBtB,OAAOF,eAAe;;8BAE5D,MAACuB;oBAAIC,WAAU;;sCACb,KAACI;4BACCC,SAAQ;4BACRL,WAAU;sCACX;;sCAGD,KAACM;4BACCC,IAAG;4BACHC,MAAK;4BACLC,OAAOrC;4BACPsC,UAAU,CAACpB,IAAMjB,SAASiB,EAAEqB,MAAM,CAACF,KAAK;4BACxCT,WAAW,CAAC,6CAA6C,EACvDtB,OAAON,KAAK,GACR,2DACA,4DACL,CAAC;4BACFwC,QAAQ;;;;8BAGZ,MAACb;oBAAIC,WAAU;;sCACb,KAACI;4BACCC,SAAQ;4BACRL,WAAU;sCACX;;sCAGD,KAACM;4BACCC,IAAG;4BACHC,MAAK;4BACLC,OAAOnC;4BACPoC,UAAU,CAACpB,IAAMf,YAAYe,EAAEqB,MAAM,CAACF,KAAK;4BAC3CT,WAAW,CAAC,6CAA6C,EACvDtB,OAAOJ,QAAQ,GACX,2DACA,4DACL,CAAC;4BACFsC,QAAQ;;;;8BAGZ,MAACb;oBAAIC,WAAU;;sCACb,KAACI;4BACCC,SAAQ;4BACRL,WAAU;sCACX;;sCAGD,KAACM;4BACCC,IAAG;4BACHC,MAAK;4BACLC,OAAOjC;4BACPkC,UAAU,CAACpB,IAAMb,mBAAmBa,EAAEqB,MAAM,CAACF,KAAK;4BAClDT,WAAW,CAAC,6CAA6C,EACvDtB,OAAOF,eAAe,GAClB,2DACA,4DACL,CAAC;4BACFoC,QAAQ;;;;8BAGZ,KAACC;oBACCL,MAAK;oBACLR,WAAW,CAAC,oDAAoD,EAC9DpB,UACI,mCACA,gCACL,qFAAqF,CAAC;oBACvFkC,UAAUlC;8BAETA,UAAU,mBAAmB;;gBAE/BE,yBACC,KAACiB;oBAAIC,WAAU;8BAAkC;;;;;AAO3D;AAEA,eAAe9B,iBAAiB"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6d637e19c170f9cf8080efd3d4c8a7d8df167dda"},coverage=global[gcv]||(global[gcv]={});coverage[path]&&"6d637e19c170f9cf8080efd3d4c8a7d8df167dda"===coverage[path].hash||(coverage[path]=coverageData);var actualCoverage=coverage[path];return cov_1g3c59a8hp=function(){return actualCoverage},actualCoverage}cov_1g3c59a8hp(),cov_1g3c59a8hp().s[0]++;const RegistrationForm=({onSubmit})=>{cov_1g3c59a8hp().f[0]++;const[email,setEmail]=(cov_1g3c59a8hp().s[1]++,(0,react.useState)("")),[password,setPassword]=(cov_1g3c59a8hp().s[2]++,(0,react.useState)("")),[confirmPassword,setConfirmPassword]=(cov_1g3c59a8hp().s[3]++,(0,react.useState)("")),[errors,setErrors]=(cov_1g3c59a8hp().s[4]++,(0,react.useState)({})),[loading,setLoading]=(cov_1g3c59a8hp().s[5]++,(0,react.useState)(!1)),[success,setSuccess]=(cov_1g3c59a8hp().s[6]++,(0,react.useState)(!1));cov_1g3c59a8hp().s[7]++;cov_1g3c59a8hp().s[21]++;return cov_1g3c59a8hp().s[38]++,(0,jsx_runtime.jsx)("div",{className:"flex items-center justify-center min-h-screen bg-gray-100",children:(0,jsx_runtime.jsxs)("form",{noValidate:!0,onSubmit:async e=>{cov_1g3c59a8hp().f[2]++,cov_1g3c59a8hp().s[22]++,e.preventDefault(),cov_1g3c59a8hp().s[23]++,setLoading(!0),cov_1g3c59a8hp().s[24]++,setErrors({}),cov_1g3c59a8hp().s[25]++,setSuccess(!1);const validationErrors=(cov_1g3c59a8hp().s[26]++,(()=>{cov_1g3c59a8hp().f[1]++;const newErrors=(cov_1g3c59a8hp().s[8]++,{}),emailPattern=(cov_1g3c59a8hp().s[9]++,/^[^\s@]+@[^\s@]+\.[^\s@]+$/);return cov_1g3c59a8hp().s[10]++,email?(cov_1g3c59a8hp().b[0][1]++,cov_1g3c59a8hp().s[12]++,emailPattern.test(email)?cov_1g3c59a8hp().b[1][1]++:(cov_1g3c59a8hp().b[1][0]++,cov_1g3c59a8hp().s[13]++,newErrors.email="Invalid email format.")):(cov_1g3c59a8hp().b[0][0]++,cov_1g3c59a8hp().s[11]++,newErrors.email="Email is required."),cov_1g3c59a8hp().s[14]++,password?(cov_1g3c59a8hp().b[2][1]++,cov_1g3c59a8hp().s[16]++,password.length<8?(cov_1g3c59a8hp().b[3][0]++,cov_1g3c59a8hp().s[17]++,newErrors.password="Password must be at least 8 characters."):cov_1g3c59a8hp().b[3][1]++):(cov_1g3c59a8hp().b[2][0]++,cov_1g3c59a8hp().s[15]++,newErrors.password="Password is required."),cov_1g3c59a8hp().s[18]++,confirmPassword!==password?(cov_1g3c59a8hp().b[4][0]++,cov_1g3c59a8hp().s[19]++,newErrors.confirmPassword="Passwords do not match."):cov_1g3c59a8hp().b[4][1]++,cov_1g3c59a8hp().s[20]++,newErrors})());if(cov_1g3c59a8hp().s[27]++,Object.keys(validationErrors).length>0)return cov_1g3c59a8hp().b[5][0]++,cov_1g3c59a8hp().s[28]++,setErrors(validationErrors),cov_1g3c59a8hp().s[29]++,setLoading(!1),void cov_1g3c59a8hp().s[30]++;cov_1g3c59a8hp().b[5][1]++,cov_1g3c59a8hp().s[31]++;try{cov_1g3c59a8hp().s[32]++,await new Promise((resolve=>{cov_1g3c59a8hp().f[3]++,cov_1g3c59a8hp().s[33]++,setTimeout((()=>{cov_1g3c59a8hp().f[4]++,cov_1g3c59a8hp().s[34]++,onSubmit(email,password),cov_1g3c59a8hp().s[35]++,setSuccess(!0),cov_1g3c59a8hp().s[36]++,resolve(!0)}),1e3)}))}catch(error){}finally{cov_1g3c59a8hp().s[37]++,setLoading(!1)}},className:"bg-white p-6 rounded-lg shadow-md w-full max-w-sm",children:[(0,jsx_runtime.jsx)("h2",{className:"text-2xl font-semibold mb-4 text-center",children:"Register"}),(cov_1g3c59a8hp().b[6][0]++,errors.email&&(cov_1g3c59a8hp().b[6][1]++,(0,jsx_runtime.jsx)("div",{className:"text-red-500 mb-2",children:errors.email}))),(cov_1g3c59a8hp().b[7][0]++,errors.password&&(cov_1g3c59a8hp().b[7][1]++,(0,jsx_runtime.jsx)("div",{className:"text-red-500 mb-2",children:errors.password}))),(cov_1g3c59a8hp().b[8][0]++,errors.confirmPassword&&(cov_1g3c59a8hp().b[8][1]++,(0,jsx_runtime.jsx)("div",{className:"text-red-500 mb-4",children:errors.confirmPassword}))),(0,jsx_runtime.jsxs)("div",{className:"mb-4",children:[(0,jsx_runtime.jsx)("label",{htmlFor:"email",className:"block text-sm font-medium text-gray-700 mb-1",children:"Email:"}),(0,jsx_runtime.jsx)("input",{id:"email",type:"email",value:email,onChange:e=>(cov_1g3c59a8hp().f[5]++,cov_1g3c59a8hp().s[39]++,setEmail(e.target.value)),className:"w-full px-3 py-2 border rounded-md shadow-sm "+(errors.email?(cov_1g3c59a8hp().b[9][0]++,"border-red-500 focus:ring-red-500 focus:border-red-500"):(cov_1g3c59a8hp().b[9][1]++,"border-gray-300 focus:ring-blue-500 focus:border-blue-500")),required:!0})]}),(0,jsx_runtime.jsxs)("div",{className:"mb-4",children:[(0,jsx_runtime.jsx)("label",{htmlFor:"password",className:"block text-sm font-medium text-gray-700 mb-1",children:"Password:"}),(0,jsx_runtime.jsx)("input",{id:"password",type:"password",value:password,onChange:e=>(cov_1g3c59a8hp().f[6]++,cov_1g3c59a8hp().s[40]++,setPassword(e.target.value)),className:"w-full px-3 py-2 border rounded-md shadow-sm "+(errors.password?(cov_1g3c59a8hp().b[10][0]++,"border-red-500 focus:ring-red-500 focus:border-red-500"):(cov_1g3c59a8hp().b[10][1]++,"border-gray-300 focus:ring-blue-500 focus:border-blue-500")),required:!0})]}),(0,jsx_runtime.jsxs)("div",{className:"mb-4",children:[(0,jsx_runtime.jsx)("label",{htmlFor:"confirmPassword",className:"block text-sm font-medium text-gray-700 mb-1",children:"Confirm Password:"}),(0,jsx_runtime.jsx)("input",{id:"confirmPassword",type:"password",value:confirmPassword,onChange:e=>(cov_1g3c59a8hp().f[7]++,cov_1g3c59a8hp().s[41]++,setConfirmPassword(e.target.value)),className:"w-full px-3 py-2 border rounded-md shadow-sm "+(errors.confirmPassword?(cov_1g3c59a8hp().b[11][0]++,"border-red-500 focus:ring-red-500 focus:border-red-500"):(cov_1g3c59a8hp().b[11][1]++,"border-gray-300 focus:ring-blue-500 focus:border-blue-500")),required:!0})]}),(0,jsx_runtime.jsx)("button",{type:"submit",className:`w-full py-2 px-4 font-semibold rounded-md shadow-sm ${loading?(cov_1g3c59a8hp().b[12][0]++,"bg-gray-500 cursor-not-allowed"):(cov_1g3c59a8hp().b[12][1]++,"bg-blue-500 hover:bg-blue-600")} text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50`,disabled:loading,children:loading?(cov_1g3c59a8hp().b[13][0]++,"Registering..."):(cov_1g3c59a8hp().b[13][1]++,"Register")}),(cov_1g3c59a8hp().b[14][0]++,success&&(cov_1g3c59a8hp().b[14][1]++,(0,jsx_runtime.jsx)("div",{className:"text-green-500 mt-4 text-center",children:"Registration successful!"})))]})})},register_form=RegistrationForm;cov_1g3c59a8hp().s[42]++,RegistrationForm.__docgenInfo={description:"",methods:[],displayName:"RegistrationForm",props:{onSubmit:{required:!0,tsType:{name:"signature",type:"function",raw:"(email: string, password: string) => void",signature:{arguments:[{type:{name:"string"},name:"email"},{type:{name:"string"},name:"password"}],return:{name:"void"}}},description:""}}};var console=__webpack_require__("./node_modules/console-browserify/index.js");const register_form_stories={title:"Components/organisms/RegistrationForm",component:register_form},Default={args:{onSubmit:(email,password)=>{console.log("Submitted email:",email),console.log("Submitted password:",password)}}},ErrorInvalidEmail={args:{onSubmit:()=>{}},play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await dist.Q4.type(canvas.getByLabelText(/email/i),"invalid-email"),await dist.Q4.type(canvas.getByLabelText(/password/i),"password123"),await dist.Q4.type(canvas.getByLabelText(/confirm password/i),"password123"),await dist.Q4.click(canvas.getByRole("button",{name:/register/i}));const emailErrorMessage=canvas.queryByText(/Invalid email format\./);(0,jest_dist.E)(emailErrorMessage).toBeInTheDocument()}},ErrorShortPassword={args:{onSubmit:()=>{}},play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await dist.Q4.type(canvas.getByLabelText(/email/i),"test@example.com"),await dist.Q4.type(canvas.getByLabelText(/password/i),"short"),await dist.Q4.type(canvas.getByLabelText(/confirm password/i),"short"),await dist.Q4.click(canvas.getByRole("button",{name:/register/i}));const passwordErrorMessage=canvas.queryByText(/Password must be at least 8 characters\./);(0,jest_dist.E)(passwordErrorMessage).toBeInTheDocument()}},ErrorPasswordMismatch={args:{onSubmit:()=>{}},play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await dist.Q4.type(canvas.getByLabelText(/email/i),"test@example.com"),await dist.Q4.type(canvas.getByLabelText(/password/i),"password123"),await dist.Q4.type(canvas.getByLabelText(/confirm password/i),"differentpassword"),await dist.Q4.click(canvas.getByRole("button",{name:/register/i}));const confirmPasswordErrorMessage=canvas.queryByText(/Passwords do not match\./);(0,jest_dist.E)(confirmPasswordErrorMessage).toBeInTheDocument()}},SuccessRegistration={args:{onSubmit:(email,password)=>{console.log("Submitted email:",email),console.log("Submitted password:",password)}},play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await dist.Q4.type(canvas.getByLabelText(/email/i),"test@example.com"),await dist.Q4.type(canvas.getByLabelText(/password/i),"password123"),await dist.Q4.type(canvas.getByLabelText(/confirm password/i),"password123"),await dist.Q4.click(canvas.getByRole("button",{name:/register/i}));const successMessage=canvas.queryByText(/Registration successful!/);(0,jest_dist.E)(successMessage).toBeInTheDocument()}},__namedExportsOrder=["Default","ErrorInvalidEmail","ErrorShortPassword","ErrorPasswordMismatch","SuccessRegistration"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    onSubmit: (email: string, password: string) => {\n      console.log("Submitted email:", email);\n      console.log("Submitted password:", password);\n    }\n  }\n}',...Default.parameters?.docs?.source}}},ErrorInvalidEmail.parameters={...ErrorInvalidEmail.parameters,docs:{...ErrorInvalidEmail.parameters?.docs,source:{originalSource:'{\n  args: {\n    onSubmit: () => {}\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Simulate user filling out the form with an invalid email\n    await userEvent.type(canvas.getByLabelText(/email/i), "invalid-email");\n    await userEvent.type(canvas.getByLabelText(/password/i), "password123");\n    await userEvent.type(canvas.getByLabelText(/confirm password/i), "password123");\n\n    // Simulate form submission\n    await userEvent.click(canvas.getByRole("button", {\n      name: /register/i\n    }));\n\n    // Check for the email error message\n    const emailErrorMessage = canvas.queryByText(/Invalid email format\\./);\n    expect(emailErrorMessage).toBeInTheDocument();\n  }\n}',...ErrorInvalidEmail.parameters?.docs?.source}}},ErrorShortPassword.parameters={...ErrorShortPassword.parameters,docs:{...ErrorShortPassword.parameters?.docs,source:{originalSource:'{\n  args: {\n    onSubmit: () => {}\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Simulate user filling out the form with a short password\n    await userEvent.type(canvas.getByLabelText(/email/i), "test@example.com");\n    await userEvent.type(canvas.getByLabelText(/password/i), "short");\n    await userEvent.type(canvas.getByLabelText(/confirm password/i), "short");\n\n    // Simulate form submission\n    await userEvent.click(canvas.getByRole("button", {\n      name: /register/i\n    }));\n\n    // Check for the password error message\n    const passwordErrorMessage = canvas.queryByText(/Password must be at least 8 characters\\./);\n    expect(passwordErrorMessage).toBeInTheDocument();\n  }\n}',...ErrorShortPassword.parameters?.docs?.source}}},ErrorPasswordMismatch.parameters={...ErrorPasswordMismatch.parameters,docs:{...ErrorPasswordMismatch.parameters?.docs,source:{originalSource:'{\n  args: {\n    onSubmit: () => {}\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Simulate user filling out the form with mismatched passwords\n    await userEvent.type(canvas.getByLabelText(/email/i), "test@example.com");\n    await userEvent.type(canvas.getByLabelText(/password/i), "password123");\n    await userEvent.type(canvas.getByLabelText(/confirm password/i), "differentpassword");\n\n    // Simulate form submission\n    await userEvent.click(canvas.getByRole("button", {\n      name: /register/i\n    }));\n\n    // Check for the confirm password error message\n    const confirmPasswordErrorMessage = canvas.queryByText(/Passwords do not match\\./);\n    expect(confirmPasswordErrorMessage).toBeInTheDocument();\n  }\n}',...ErrorPasswordMismatch.parameters?.docs?.source}}},SuccessRegistration.parameters={...SuccessRegistration.parameters,docs:{...SuccessRegistration.parameters?.docs,source:{originalSource:'{\n  args: {\n    onSubmit: (email: string, password: string) => {\n      console.log("Submitted email:", email);\n      console.log("Submitted password:", password);\n    }\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Simulate user filling out the form with valid inputs\n    await userEvent.type(canvas.getByLabelText(/email/i), "test@example.com");\n    await userEvent.type(canvas.getByLabelText(/password/i), "password123");\n    await userEvent.type(canvas.getByLabelText(/confirm password/i), "password123");\n\n    // Simulate form submission\n    await userEvent.click(canvas.getByRole("button", {\n      name: /register/i\n    }));\n\n    // Check for the success message\n    const successMessage = canvas.queryByText(/Registration successful!/);\n    expect(successMessage).toBeInTheDocument();\n  }\n}',...SuccessRegistration.parameters?.docs?.source}}}},"?4f7e":()=>{}}]);